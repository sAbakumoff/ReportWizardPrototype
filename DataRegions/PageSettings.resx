<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="_iconBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAN4AAACdCAYAAADbq8Z1AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wAAADsABataJCQAAAAd0SU1FB+cLBwgWGCx19AsAAAAHdEVYdEF1dGhvcgCprsxIAAAADHRFWHREZXNj
        cmlwdGlvbgATCSEjAAAACnRFWHRDb3B5cmlnaHQArA/MOgAAAAl0RVh0U29mdHdhcmUAXXD/OgAAAAd0
        RVh0U291cmNlAPX/g+sAAAAIdEVYdENvbW1lbnQA9syWvwAAAAZ0RVh0VGl0bGUAqO7SJwAAA61JREFU
        eF7t1UFqVAEURNHsNHGc7QR30OtUOpCJAynkCk85B37gd6BHdV+/vL5++/Hx8T153t667/J4rj3lvl+e
        fyqPx+PXj+C/Ue5beDAq952GB2zS8MqLANeU+xYejMp9Cw9G5b7T8IBNGl55EeCact/Cg1G5b+HBqNx3
        Gh6wScMrLwJcU+5beDAq9y08GJX7TsMDNml45UWAa8p9Cw9G5b6FB6Ny35/hPb/w63ny7t373333iwej
        ct/Cg1G5b+HBqNx3Gh6wScMrLwJcU+5beDAq9y08GJX7TsMDNml45UWAa8p9Cw9G5b6FB6Ny32l4wCYN
        r7wIcE25b+HBqNy38GBU7jsND9ik4ZUXAa4p9y08GJX7Fh6Myn2n4QGbNLzyIsA15b6FB6Ny38KDUbnv
        NDxgk4ZXXgS4pty38GBU7lt4MCr3nYYHbNLwyosA15T7Fh6Myn0LD0blvtPwgE0aXnkR4Jpy38KDUblv
        4cGo3HcaHrBJwysvAlxT7lt4MCr3LTwYlftOwwM2aXjlRYBryn0LD0blvoUHo3LfaXjAJg2vvAhwTblv
        4cGo3LfwYFTuOw0P2KThlRcBrin3LTwYlfsWHozKfafhAZs0vPIiwDXlvoUHo3LfwoNRue80PGCThlde
        BLim3LfwYFTuW3gwKvedhgds0vDKiwDXlPsWHozKfQsPRuW+0/CATRpeeRHgmnLfwoNRuW/hwajcdxoe
        sEnDKy8CXFPuW3gwKvctPBiV+07DAzZpeOVFgGvKfQsPRuW+hQejct9peMAmDa+8CHBNuW/hwajct/Bg
        VO47DQ/YpOGVFwGuKfctPBiV+xYejMp9p+EBmzS88iLANeW+hQejct/Cg1G57zQ8YJOGV14EuKbct/Bg
        VO5beDAq952GB2zS8MqLANeU+xYejMp9Cw9G5b7T8IBNGl55EeCact/Cg1G5b+HBqNx3Gh6wScMrLwJc
        U+5beDAq9y08GJX7TsMDNml45UWAa8p9Cw9G5b6FB6Ny32l4wCYNr7wIcE25b+HBqNy38GBU7jsND9ik
        4ZUXAa4p9y08GJX7Fh6Myn2n4QGbNLzyIsA15b4/w3t+4dfz9Kfv7+/vv/2/d+//8nu5b794MCr3nYYH
        bNLwyosA15T7Fh6Myn0LD0blvtPwgE0aXnkR4Jpy38KDUblv4cGo3HcaHrBJwysvAlxT7lt4MCr3LTwY
        lftOwwM2aXjlRYBryn0LD0blvoUHo3LfaXjAJg2vvAhwTbnvn3IxadwA2UpbAAAAAElFTkSuQmCC
</value>
  </data>
</root>